S3method("[[",package_options)
S3method("[[<-",package_options)
S3method(addnames,array)
S3method(addnames,default)
S3method(addnames,matrix)
S3method(addnames,vector)
S3method(format,package_metaregistry)
S3method(format,package_subregistry)
S3method(print,package_metaregistry)
S3method(print,package_options)
S3method(print,str_diff)
S3method(xtable,package_metaregistry)
export(CRAN)
export(R.CMD)
export(R.SHLIB)
export(R.exec)
export(Rversion)
export(addNamespaceExport)
export(addnames)
export(allFormals)
export(as.package_options)
export(as.rnw)
export(cgetAnywhere)
export(checkPlot)
export(checkWarning)
export(cite)
export(compile_src)
export(exitCheck)
export(extractLocalFun)
export(file_extension)
export(getBiocMirror)
export(getBiocRepos)
export(getLoadingNamespace)
export(hasNames)
export(inSweave)
export(is.dir)
export(is.file)
export(isFALSE)
export(isInteger)
export(isLoadingNamespace)
export(isNA)
export(isNamespaceLoaded)
export(isNumber)
export(isPackageInstalled)
export(isReal)
export(isString)
export(is_option_symlink)
export(latex_bibliography)
export(latex_preamble)
export(libname)
export(list.libs)
export(listPackageOptions)
export(makeFakeVignette)
export(makeUnitVignette)
export(new2)
export(onLoad)
export(onUnload)
export(oneoffVariable)
export(option_symlink)
export(option_symlink_target)
export(packageEnv)
export(packageName)
export(packageOptions)
export(packagePath)
export(packageRegistry)
export(packageTestEnv)
export(regfetch)
export(require.quiet)
export(requirePackage)
export(rnw)
export(rnwChildren)
export(rnwCompiler)
export(rnwDriver)
export(rnwIncludes)
export(rnwWrapper)
export(setBiocMirror)
export(setCRANMirror)
export(setPackageRegistry)
export(setupPackageOptions)
export(source_files)
export(str_desc)
export(str_diff)
export(str_ns)
export(str_out)
export(testRversion)
export(toppackage)
export(unit.test)
export(utest)
export(utestFramework)
export(vignetteMakefile)
export(write.bib)
export(writeUnitVignette)
import(stringr)
importFrom(codetools,getAssignedVar)
importFrom(codetools,makeCodeWalker)
importFrom(methods,is)
importFrom(xtable,xtable)
